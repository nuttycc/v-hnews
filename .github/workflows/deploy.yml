name: Vue App Deploy to GitHub Pages

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build_needed: ${{ steps.changes.outputs.build_needed }}
    steps:
      - uses: actions/checkout@v4

      - name: Check if build is needed
        id: changes
        run: |
          echo "Fetching origin/${{ github.ref_name }}"
          git fetch origin ${{ github.ref_name }} --depth=1
          echo "Changed files:"
          git diff --name-only origin/${{ github.ref_name }} || true
          if git diff --name-only origin/${{ github.ref_name }} | grep -E 'src/|package.json|pnpm-lock.yaml|vite.config.ts|tsconfig.*\.json|\.env.*|public/'; then
            echo "build_needed=true" >> $GITHUB_OUTPUT
          else
            echo "build_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ github.ref_name }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.ref_name }}-pnpm-store-
            ${{ runner.os }}-pnpm-store-

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        if: steps.changes.outputs.build_needed == 'true' || github.event_name == 'workflow_dispatch'
        run: pnpm install

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ github.ref_name }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.ref_name }}-node-modules-
            ${{ runner.os }}-node-modules-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Cache Vite build cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.vite
          key: ${{ runner.os }}-${{ github.ref_name }}-vite-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('src/**/*.[jt]s', 'src/**/*.[jt]sx', 'src/**/*.vue') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.ref_name }}-vite-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-${{ github.ref_name }}-vite-

      - name: Build
        if: steps.changes.outputs.build_needed == 'true' || github.event_name == 'workflow_dispatch'
        run: pnpm build
        env:
          NODE_ENV: production
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Upload sourcemaps to Sentry
        if: steps.changes.outputs.build_needed == 'true'
        uses: getsentry/action-release@v1
        with:
          environment: 'production'
          sourcemaps: ./dist
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: envious
          SENTRY_PROJECT: javascript-vue

      - name: Upload pages artifact
        if: steps.changes.outputs.build_needed == 'true' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
          retention-days: 1



  deploy-prod:
    if: github.ref == 'refs/heads/main' && (needs.build.outputs.build_needed == 'true' || github.event_name == 'workflow_dispatch')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: https://nuttycc.github.io/v-hnews/
    steps:
      - name: Deploy to Prod GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

